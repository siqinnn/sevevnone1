{"remainingRequest":"C:\\Users\\斯琴\\Desktop\\prictice\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\斯琴\\Desktop\\prictice\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\斯琴\\Desktop\\prictice\\src\\App.vue","mtime":1561966648088},{"path":"C:\\Users\\斯琴\\Desktop\\prictice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\斯琴\\Desktop\\prictice\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\斯琴\\Desktop\\prictice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\斯琴\\Desktop\\prictice\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport child from \"./components/child\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nexport default {\n  name: \"app\",\n  components: {\n    child\n  },\n\n  data() {\n    return {\n      nameList: [\"css\", \"js\", \"route\", \"vuex\"],\n      // pathList: [\"/css\", \"/js\", \"/route\", \"/vuex\"]\n      duixiang: {\n        name: \"我是爸爸111111\"\n      }\n    };\n  },\n  methods: {\n    // 使用路由name属性跳转\n    Route(name) {\n      this.$router.push({ name: name });\n    },\n    showchild(data) {\n      console.log(data);\n    },\n\n    // 使用路由path属性跳转\n    // Route2(path) {\n    //   this.$router.push({ path: path });\n    // }\n    bian() {\n      document.getElementById(\"yang\").style.backgroundColor = \"white\";\n      document.getElementById(\"yang\").style.height = \"120px\";\n    }\n  }\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappingsiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div>\n      <p>使用路由name属性跳转</p>\n\n      <button v-for=\"name of nameList\" :key=\"name\" @click=\"Route(name)\">{{name}}</button>\n      <router-view></router-view>\n    </div>\n\n    <!-- <div>\n      <p>使用路由path属性跳转</p>\n      <button\n        v-for='path of pathList'\n        :key='path'\n        @click=\"Route2(path)\"\n      >{{path}}</button>\n    </div>-->\n\n    <!-- 展示路由 跳别的页面   子路由的内容输出窗口 -->\n\n    <div class=\"fu\">\n      <child @clickkkkk=\"showchild\" :duixiang=\"duixiang\"></child>\n    </div>\n\n    <div class=\"new\">\n      <div>\n        <p class=\"heiha\">1.css选择器有哪些？选择器关系？</p>(1)标签选择器--p.div.ul.li\n        <br />(2)类选择器--class=\"name\"\n        <br />(3)ID选择器--id=\"name\"\n        <br />(4)伪类选择器--a.link.visitid.active\n        <br />(4)伪选择器--before.after\n        <br />(5)全局选择器--*号\n        <br />(6)继承选择器--父级 子集 div kk\n        <br />(7)选择器关系：\n        <br />！important>内联>id>class>\n        <br />标签>通配符>继承\n      </div>\n      <div>\n        <p class=\"heiha\">2.Background简写怎么写，拆开写怎么写？</p>(1)background-color--背景颜色\n        <br />(2)background-position--定位位置\n        <br />(3)background-size--背景大小\n        <br />(4)background-repeat--是否平铺\n        <br />(5)background-origin--基准点\n        <br />(6)background-clip--切割\n        <br />(7)background-attachment--设置固定背景\n        <br />(8)background-image--背景图片\n        <br />\n      </div>\n      <div>\n        <p class=\"heiha\">\n          3.文字怎么添加下划线，怎么居中/上下、\n          <br />左右/，怎么缩进\n          ，怎么设置字符间距？\n          <br />怎么引入第三方字体、图标\n        </p>\n        <p style=\" text-decoration: underline\">文字下划线</p>\n        <p style=\"text-align: center;\n  line-height: 10px;\">文字居中（上下）</p>\n        <p style=\" text-indent: 10px;\">文字缩进</p>\n        <p style=\"letter-spacing:20px;\">字符间距</p>\n        <a href=\"#\">\n          <i class=\"fa fa-home fa-fw\"></i>&nbsp; 首页\n        </a>\n      </div>\n      <div>\n        <p class=\"heiha\">4.em，rem，vh，vw，px分别什么意思？</p>(1)px是像素值，屏幕显示最小点,\n        <br />(2)em是相对于父级的字体大小,\n        <br />(3)rem是相对于html根元素的字体大小,\n        <br />(4)vh和vw相对于视口的高度和宽度\n      </div>\n      <div>\n        <p class=\"heiha\">5.Table表格怎么合并边框？</p>\n        <p>border-collapse: collapse;</p>\n        <table>\n          <caption>学生成绩表</caption>\n          <thead>\n            <tr>\n              <th>学号</th>\n              <th>姓名</th>\n              <th>成绩</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>1</td>\n              <td>猫啊</td>\n              <td>88</td>\n            </tr>\n            <tr>\n              <td>2</td>\n              <td>狗啊</td>\n              <td>98</td>\n            </tr>\n            <tr>\n              <td>3</td>\n              <td>猫狗</td>\n              <td>68</td>\n            </tr>\n          </tbody>\n          <tfoot></tfoot>\n        </table>\n      </div>\n    </div>\n    <div class=\"new\">\n      <div>\n        <p class=\"heiha\">6.Css盒模型有哪些属性？ 意义是 ？</p>(1)width和height\n        <br />(2)min-width和max-width\n        <br />(3)padding\n        <br />(4)margin\n        <br />(5)border\n      </div>\n      <div>\n        <p class=\"heiha\">7.元素边框设置有哪些属性？</p>\n        <p>border-width 元素边框宽度--1px</p>\n        <p>border-color 元素边框颜色--red</p>\n        <p>border-style 元素边框线--solid/dashed</p>\n        <p>border 元素边框上/下/左/右</p>\n        <p>border-top 下边框</p>\n        <p>border-right 右边框</p>\n        <p>border-left 左边框</p>\n        <p>border-bottom 下边框</p>\n        <p style=\"  border:1px dashed red;\">边框宽度-1px/边框线-dashed/边框颜色-red</p>\n      </div>\n      <div>\n        <p class=\"heiha\">8.行元素、块元素怎么切换？</p>\n        <p>行级：span标签 inline-- 切换成行级元素</p>\n        <p>块级：div标签 block-- 切换成块级元素</p>\n        <p>\n          行块级：img标签 inline-block-- 切换\n          <br />成行块级元素\n        </p>\n      </div>\n      <div>\n        <p class=\"heiha\">9.Css定位属性有哪些？意义是什么？</p>(1) position：relative 相对定位----自身\n        <br />(2) position：absolute 绝对定位----父级\n        <br />(3)position：fixd 固定定位----浏览器\n        <br />注 ：常用的三种定位，都用top/bottom/\n        <br />left/right定位\n      </div>\n      <div>\n        <p class=\"heiha\">\n          10.内容溢出（超长）布局属性有哪些，文\n          <br />字超长怎么显示为省略？\n        </p>overflow属性:\n        <br />visible--内容不剪切，溢出显示在框外\n        <br />hidden--内容剪切，移除元素内容不可见\n        <br />scroll--内容会溢出剪切，自动生成滚动条\n        <br />auto--内容如果溢出， 会自动生成滚动条\n        <br />inherit--继承父级的overflow值\n        overflow:hidden;\n        <br />text-overflow: ellipsis;\n        <br />white-space: nowrap;\n        <span\n          style=\" display: block; width:290px;height:30px;border:1px solid green;overflow:hidden;\n          text-overflow: ellipsis;\nwhite-space: nowrap;\n           \"\n        >\n          内容溢出了丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫\n          丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫丫\n        </span>\n      </div>\n    </div>\n    <div class=\"new\">\n      <div>\n        <p class=\"heiha\">11.css伪类有哪些，伪元素有哪些？怎么设置伪类时的鼠标样式？</p>伪类：\n        <br />\n        a:link {color:#FF0000;} 未访问\n        <br />\n        a:visited {color:#00FF00;} 已访问\n        <br />\n        a:hover {color:#FF00FF;} 标划过\n        <br />\n        a:active {color:#0000FF;} 已选中\n        <br />first-child匹配第一个元素\n        <br />伪元素：\n        <br />：before---元素之前插入内容\n        <br />：after--元素后面插入内容\n        <span style=\"display: block;\n  \" class=\"ming\">伪类时候的鼠标样式</span>\n      </div>\n      <div>\n        <p class=\"heiha\">12.将这个图用精灵图方法拆成6个图标</p>\n        <img src=\"./assets/图片1.png\" alt />\n        <p class=\"new\" style=\"border:none;\">\n          <span class=\"jing k1\"></span>\n          <span class=\"jing k2\"></span>\n          <span class=\"jing k3\"></span>\n          <span class=\"jing k4\"></span>\n          <span class=\"jing k5\"></span>\n          <span class=\"jing k6\"></span>\n        </p>\n      </div>\n      <div>\n        <p class=\"heiha\">13.媒体查询怎么写？Css 2D、3D变换有哪些？</p>\n        @media 媒体类型and （特性）{样式}\n        <br />\n        media screen and (min-width:900px){}\n        <br />2D/3D:transform\n        <br />\n        <p class=\"zi zi1\" style>\n          移动：\n          <br />translate(x, y)\n        </p>\n        <p class=\"zi zi2\" style>\n          缩放：\n          <br />scale(x, y)\n        </p>\n        <p class=\"zi zi3\" style>\n          旋转：\n          <br />rotate(deg)\n        </p>\n        <p class=\"zi zi4\" style>\n          倾斜：\n          <br />skew(deg)\n        </p>\n\n        <p class=\"zi zi5\" style>\n          移动：\n          <br />translate(x,y,z)\n        </p>\n        <p class=\"zi zi6\" style>\n          缩放：\n          <br />scale(x,y,z)\n        </p>\n        <p class=\"zi zi7\" style>\n          旋转：\n          <br />rotate(deg)\n        </p>\n        <p class=\"zi zi8\" style>\n          倾斜：无\n          <br />skew(deg)\n        </p>\n      </div>\n      <div>\n        <p class=\"heiha\">14.Css怎么设置阴影、圆角、缩放、旋转？</p>\n        <p>阴影语法：box-shadow: h-shadow v-shadow blur spread color inset;</p>\n        <p>圆角：border-radius：上/右/下/左</p>\n        <p class=\"zi yin1\">\n          阴影\n          <br />box-shadow:\n        </p>\n        <p class=\"zi yin2\" style=\"line-height:20px\">\n          圆角\n          <br />border-radius:\n        </p>\n        <p class=\"zi zi2\" style>\n          缩放：\n          <br />scale(x, y)\n        </p>\n        <p class=\"zi zi3\" style>\n          旋转：\n          <br />rotate(deg)\n        </p>\n      </div>\n      <div>\n        <p class=\"heiha\">15.线性渐变怎么写，多个颜色的线性渐变怎么写？</p>\n        <p>语法：background-image: linear-gradient(,);</p>\n        <p class=\"xian h1\"></p>\n        <p class=\"xian h2\"></p>\n        <p class=\"xian h3\"></p>\n        <p class=\"xian h4\"></p>\n        <p class=\"xian h5\"></p>\n        <p class=\"xian h6\"></p>\n        <p class=\"xian h7\"></p>\n        <p class=\"xian h8\"></p>\n      </div>\n    </div>\n    <div class=\"new\">\n      <div>\n        <p class=\"heiha\">16.Css动画怎么写？写一个背景色变化过渡动画，写一个位移动画</p>\n        <p>语法：animation: 名字 时间 方式 延迟 循环;</p>\n        <p>\n          @keyframes 名字{\n          <br />\n          0%{}\n          <br />\n          100%{}\n        </p>\n        <p class=\"bian guo\">css变色动画</p>\n        <p class=\"wei bian\">css位移动画</p>\n      </div>\n      <div class=\"hav1\">\n        <p class=\"heiha\">17.弹性盒子有哪些属性，意义是什么？</p>\n        <p class=\"hav\">\n          弹性布局：display：flex;\n          <br />属性-flex-direction值排列方向\n          <br />row :从左到右的水平方向\n          <br />row-reverse：从右到左的水平方向\n          <br />column:从上到下的垂直方向\n          <br />column-reverse从下到上的方向\n          <br />属性-justify-content 子元素对齐方式\n          <br />flex-start 主轴起点对齐\n          <br />flex-end 主轴结束点对齐\n          <br />center 在主轴中居中对齐\n          <br />space-between 两端对齐\n          <br />space-around 子元素间的距离相等\n          <br />属性-align-items 子元素对齐的方式\n          <br />stretch 填充整个容器\n          <br />flex-start 侧轴的起点对齐\n          <br />flex-end 侧轴的终点对齐\n          <br />center 在侧轴中居中对齐\n          <br />baseline 以子元素的第一行文字对齐\n        </p>\n      </div>\n      <div>\n        <p class=\"heiha\">18.一个H5页面由哪几个基础的标签组成，分别做什么用,script标签有什么 ；</p>\n        <p style=\"font-size:14px\">\n          article --标记定义一篇文章\n          <br />header --定义一个页面或一个区域的头部\n          <br />nav --定义导航链接\n          <br />section --定义一个区域\n          <br />aside --定义页面内容部分的侧边栏\n          <br />hgroup --定义文件中一个区块的相关信息\n          <br />figure --定义一组媒体内容及它们的标题\n          <br />figcaption --定义 figure 元素的标题。\n          <br />footer --定义一个页面或一个区域的底部\n          <br />dialog --定义一个对话框\n          <br />script标签:通常放置在一个网页的头部标签内的用于\n          链接外部JS文件外部资源标签,script 标签最常见的用途是链接外部js，外部资源。\n        </p>\n      </div>\n      <div>\n        <p class=\"heiha\">19.单引号‘’和双引号“”，有什么区别，使用规则？</p>区别：\n        <br />单引号和双引号都可以表示一个字符串，二者在语法上没有区别。\n        但从规范上说，一般的大部分规范中都要求使用单引号来引用字\n        符串，这样做有一个好处，如果一个js的变量是一段html代码\n        的字符串，html的属性在规范中是使用双引号，字符串使用单\n        引号，字符串中的html属性就可以直接使用双引号而不用转义。\n        规则：\n        在同一行代码内外部使用单引号，则外部使用双引号，反之则反，是为了区别开来，\n      </div>\n      <div>\n        <p class=\"heiha\">20.代码注释方法有哪些，区别是什么？</p>(1) HTML : < 叹号--注释内容-->\n        <br />(2) CSS:/* 注释内容*/\n        <br />(3) JS: //注 释内容; 或者/* 注释内容 */,\n      </div>\n    </div>\n    <div class=\"new\">\n      <div>\n        <p class=\"heiha\">21.什么是行元素、块元素，区别？</p>\n        <p style=\"font-size:14px;\">\n          块级：\n          <br />1.独占一行，宽度自动填满其父元素宽度\n          <br />2.块级元素可以设置宽高\n          <br />3.块级元素可以设置margin，padding\n          <br />4.display:block;\n          <br />行内：\n          <br />1.同处一行，其宽度随内容的变化而变化。\n          <br />2.行内元素不可以设置宽高\n          <br />3.行内元素水平方向margin可生效。竖直方向不生效。\n          <br />4.display:inline;\n          <br />行级：\n          <br />1.可以和其他元素处于一行，不用另起一行。\n          <br />2.元素的高、宽及顶部和底部边距不可设置。\n          <br />3.元素的宽度不可改变。\n        </p>\n      </div>\n      <div>\n        <p class=\"heiha\">22.怎么用十六进制和rgb/rgba方式定义颜色，a是什么，怎么单独使用a？</p>\n        <span style=\"font-size:12px;display:block\">\n          (1)十六进制\n          <br />\n          <p style=\" color:#8e3939;\">\n            颜色依次为纯白：#ffffff;纯红：#ff0000;纯绿：#00ff00;纯蓝：#0000ff;\n            #__ __ __ 这三个空白位置分别，代表red，green，blue要填写两位十六进制数。\n            所以#ff 00 00 ,red部分为最大值ff，其余为0，代表红色最纯，绿色蓝色不上色。\n            #fff ff ff ，红绿蓝三种纯色混合，产生白色，此处亦然。\n          </p>(2)rgb\n          <p style=\"  color:rgb(57, 223,90)\">\n            rgb(x，y，z)\n            这三个参数是从0~255的十进制数，和十六进制色表示原理基本一致，\n          </p>(3)rgba\n          <p style=\"color: rgba(200, 60, 30, 0.3)\">\n            rgba(x，y，z，a)\n            与rgb类似，其中代表元素的透明度0-1为取值范围，透明度作用于颜色和背景\n          </p>\n        </span>\n      </div>\n      <div>\n        <p class=\"heiha\">23.一个url都由哪几部分组成？</p>例如：\n        <a>https://www.baidu.com</a>\n\n        <br />第一部分是协议(或称为服务方式);\n        <br />第二部分是存有该资源的主机IP地址(有时也包括端口号);\n        <br />第三部分是主机资源的具体地址，如目录和文件名等。\n        <br />第一部分和第二部分之间用“：//”符号隔开，第二部分和第三部分用“/”符号隔开。第一部分和第二部分是不可缺少的，第三部分有时可以省略。\n      </div>\n      <div class=\"hav1\">\n        <p class=\"heiha\">24.H5 web 存储有哪些，怎么用？</p>\n        <p class=\"hav\">\n          (1)cookies:\n          <br />h5之前，存储主要是用cookies。cookies缺点有在请求头上带着数据，大小是4k之内。主Domain污染。\n          主要应用：购物车、客户登录\n          对于IE浏览器有UserData，大小是64k,只有IE浏览器支持。\n          <br />(2)localstorage:\n          <br />存储方式：\n          <br />以键值对(Key-Value)的方式存储，永久存储，永不失效，除非手动删除。\n          大小为\n          每个域名5M\n          <br />(3)sessionstorage:\n          <br />HTML5 的本地存储 API 中的 localStorage 与 sessionStorage\n          在使用方法上是相同的，区别在于 sessionStorage 在关闭页面\n          后即被清空，而 localStorage 则会一直保存。\n          <br />用法：\n          <br />保存数据：localStorage.setItem(key,value);\n          <br />读取数据：localStorage.getItem(key);\n          <br />删除单个数据：localStorage.removeItem(key);\n          <br />删除所有数据：localStorage.clear();\n          <br />得到某个索引的key：localStorage.key(index);\n        </p>\n      </div>\n      <div class=\"hav1\">\n        <p class=\"heiha\">25.http请求方式有哪些，使用场景是什么？ 常用的HTTP 状态码有哪些，意义是什么？</p>\n        <p class=\"hav\">\n          GET:\n          <br />GET请求是向服务端请求获取某个或某些资源（resource），查询数据库单个或list数据，服务端成功的话，一般状态码返回200。\n          <br />POST:\n          <br />POST请求是用来向服务端请求新增资源（resource），处理成功的话，服务端一般返回状态码201。\n          <br />PUT:\n          <br />PUT请求一般是用来向服务端请求修改某个已存在的资源（resource）,服务端一般返回状态码200，204等。\n          <br />DELETE:\n          <br />DELETE请求一般是用来向服务端请求删除某个已存在的资源（resource），服务端一般返回200，202等。\n          <br />PATCH:\n          <br />PATCH请求一般是对某个资源做局部修改,如个别字段。\n          <br />状态码：\n          <br />1XX Informational（信息性状态码） 接受的请求正在处理\n          <br />2XX Success（成功状态码） 请求正常处理完毕\n          <br />3XX Redirection（重定向状态码） 需要进行附加操作以完成请求\n          <br />4XX Client Error（客户端错误状态码） 服务器无法处理请求\n          <br />5XX Server Error（服务器错误状态码） 服务器处理请求出错\n        </p>\n      </div>\n    </div>\n\n    <div class=\"new\">\n      <div class=\"hav1\">\n        <p class=\"heiha\">\n          26.p、a、div、hr、ul、li、span、br、\n          title、 style、 meta、 link、 script、img、\n          table、th、tr、td、form、input、textarea、\n          radio、checkbox、label、select标签各是什么，怎么用？\n        </p>\n        <p class=\"hav hav2\">\n          p--文本块级标签--直接写入内容\n          <br />a--指定w3c超链接--href导入地址\n          <br />div--块级无样式--随意使用\n          <br />hr--水平分隔线--需要水平线的位置放hr\n          <br />ul--标签定义无序列表--与li同用\n          <br />li--标签定义列表项目--与ul同用\n          <br />span--行级标签--可插入图片文本\n          <br />br--换行标签--需要换行时候用\n          <br />title--标题标签--写页面前定义题目\n          <br />style--行内写css样式--此标签内写入样式\n          <br />meta--提供有关页面的元信息--不包含内容\n          <br />link--链接一个外部样式表--导入外部资源\n          <br />script--写逻辑标签--写逻辑代码\n          <br />img--图片标签--行内插入图片src\n          <br />table--标签定义 HTML 表格--写入表头信息\n          <span class=\"yin\">\n            <br />th--表头单元格--写入数据\n            <br />tr--定义表格中的行--table内包住th，td\n            <br />td--标准单元格--写入内容\n            <br />form--为用户输入创建 HTML 表单--向服务器传输数据\n            <br />input--输入框--单选框，复选框，按钮，文本框\n            <br />textarea--定义多行的文本输入控件--通过cols和rows规定尺寸\n            <br />radio--单选按钮--type内输入radio实现单选\n            <br />checkbox--复选框--type内输入checkbox实现复选框\n            <br />label--标签为input元素定义标注--触发控件\n            <br />select--表单控件，单选复选--结合option使用\n          </span>\n        </p>\n      </div>\n      <div class=\"hav1\">\n        <p class=\"heiha\">27.查找元素的方法有哪些？怎么创建、添加、删除、替换元素？</p>\n        <p class=\"hav\">\n          查找元素：\n          <br />getElementsByName()--通过name名查找\n          <br />getElementsByTagName()--通过标签查找\n          <br />getElementsByClassName()--通过类名查找\n          <br />getElementById()--通过id名查找\n          <br />\n          <br />1、创建元素节点：createElement\n          <br />用法：document.createElement(\"p\");\n          <br />创建文本节点：createTextNode;\n          <br />用法：document.createTextNode(\"txt\");\n          <br />2、插入节点：appendchild:在要插入的元素节点上调用，他插入指定的节点使其成为那个节点的最后一个子节点。\n          <br />insertBefore:在已有的元素前插入一个新元素；\n          <br />insertAfter:在现有的元素后面插入一个新元素；\n          <br />3、删除节点：removeChild;从文档树中删除一个节点\n          <br />用法：var para1=document.getElementById(\"p1\");\n          <br />para1.parentNode.removeChild(para1);\n          <br />4、替换节点：replaceChild;将一个节点替换为另一个节点\n        </p>\n      </div>\n      <div>\n        <p class=\"heiha\">28.DOM的意义？</p>DOM是文档对象模型，dom把网页中的内容与元素呈现的清晰，任何一个\n        元素或者内容都有自己的节点，对开发人员来说是索引目录，通过dom。可以访问html内\n        所有内容。\n      </div>\n      <div>\n        <p class=\"heiha\">29.怎么用DOM方法修改元素样式？</p>通过获取dom节点： 获取id\n        <br />document.getElementById(\"yang\").\n        <br />style.backgroundColor = \"white\";\n        <br />document.getElementById(\"yang\")\n        <br />.style.height = \"120px\";\n        <p id=\"yang\" @click=\"bian()\">修改样式</p>\n      </div>\n      <div>\n        <p class=\"heiha\">30.Undefined 和 Null怎么区分，理解？</p>Undefined：定义了一个变量却没有赋值；\n        <br />null：表示空，此处没有值；\n      </div>\n    </div>\n\n    <div class=\"new\">\n      <div>\n        <p class=\"heiha\">31.定义变量的方式（关键字）有哪些？区别、意义是什么？怎么同时定义多个变量？</p>(1)var:定义的变量可以被修改，如果没有初始化会输出undefind，不报错，会产生变量提升；\n        <br />(2)let：块级作用域，使用它会形成暂时性死区，对函数外面没有影响；\n        <br />(3)const：常量变量，定义的变量无法修改；\n        <br />同时定义多各变量：\n        <br />逗号隔开变量即可，例如：var a=10，b=20，c=30\n      </div>\n      <div>\n        <p class=\"heiha\">32.JavaScript 语句标识符有哪些，意义、作用，写出来例子？</p>(1)break：跳出循环\n        <br />(2)continue：跳出当前，进入下一个\n        <br />(3)if...else：不同条件实现不同效果\n        <br />(4)return:退出函数\n        <br />(5)var:定义变量\n        <br />(6)function:定义一个函数\n      </div>\n      <div>\n        <p class=\"heiha\">33.js代码规范中，重点有哪些？</p>(1)写注释\n        <br />(2)for循环条件内不能有dom\n        <br />(3)减少全局污染\n        <br />(4)用===替换==\n        <br />(5)命名规范\n      </div>\n      <div>\n        <p class=\"heiha\">34.Js数据类型有哪些，意义、怎么创建？数据操作符、逻辑操作符有哪些？</p>(1)基本类型：string、number、boolean、undefined、null\n        <br />(2)引用类型：object、function、array\n        <br />(3)ES6新类型：symbol。类似于数组\n        <br />\n        <br />算术运算符:+ 、 – 、* 、 / 、 % 、 -(一元取反) 、 ++ 、 —\n        <br />等同运算符与全同运算符:== 、 ===、 !== 、 !===\n        <br />比较运算符:< 、 > 、 <= 、 >=\n        <br />字符串运算符::< 、 > 、 <= 、 >= 、 = 、 +\n        <br />逻辑运算符:&& 、 ||、 !、\n        <br />赋值运算符:=、 +=、 *=、 -=、 /=\n      </div>\n      <div>\n        <p class=\"heiha\">35.完事了完事了完事了完事了完事了完事了</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport child from \"./components/child\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nexport default {\n  name: \"app\",\n  components: {\n    child\n  },\n\n  data() {\n    return {\n      nameList: [\"css\", \"js\", \"route\", \"vuex\"],\n      // pathList: [\"/css\", \"/js\", \"/route\", \"/vuex\"]\n      duixiang: {\n        name: \"我是爸爸111111\"\n      }\n    };\n  },\n  methods: {\n    // 使用路由name属性跳转\n    Route(name) {\n      this.$router.push({ name: name });\n    },\n    showchild(data) {\n      console.log(data);\n    },\n\n    // 使用路由path属性跳转\n    // Route2(path) {\n    //   this.$router.push({ path: path });\n    // }\n    bian() {\n      document.getElementById(\"yang\").style.backgroundColor = \"white\";\n      document.getElementById(\"yang\").style.height = \"120px\";\n    }\n  }\n};\n</script>\n<style>\n.vueblog-font {\n  font-family: vueblog;\n}\np {\n  margin: 5px 0;\n}\nbutton {\n  margin-right: 10px;\n  padding: 2px 15px;\n  font-size: 16px;\n}\n.new {\n  border-top: 2px solid black;\n  display: flex;\n  justify-content: flex-start;\n}\n.new > div {\n  border: 1px solid black;\n  width: 20%;\n}\n.heiha {\n  color: red;\n}\ntable {\n  margin: 0 auto;\n  width: 300px;\n  border: 1px solid red;\n  border-collapse: collapse;\n}\nth,\ntd {\n  text-align: center;\n  border: 1px solid green;\n}\n.ming {\n  width: 200px;\n  height: 30px;\n  border: 1px solid green;\n}\n.ming:hover {\n  cursor: pointer;\n}\n.jing {\n  width: 46px;\n  height: 44px;\n  background: url(\"./assets/图片1.png\") no-repeat;\n  display: block;\n  margin-left: 2px;\n}\n.k1 {\n  background-position: 0px 0px;\n}\n.k2 {\n  background-position: 0px -45px;\n}\n.k3 {\n  width: 42px;\n  background-position: -47px 0px;\n}\n.k4 {\n  width: 42px;\n  background-position: -47px -45px;\n}\n.k5 {\n  width: 42px;\n  background-position: -91px 0px;\n}\n.k6 {\n  width: 42px;\n  background-position: -91px -45px;\n}\n.zi {\n  width: 65px;\n  height: 65px;\n  background: green;\n  border: 1px solid black;\n  text-align: center;\n  line-height: 30px;\n  font-size: 5px;\n  float: left;\n  margin-left: 4px;\n}\n.zi1:hover {\n  transform: translate(10px);\n}\n.zi2:hover {\n  transform: scale(0.5);\n}\n.zi3:hover {\n  transform: rotate(30deg);\n}\n.zi4:hover {\n  transform: skew(13deg);\n}\n.zi5:hover {\n  transform: translate3d(5px, 5px, 6px);\n}\n.zi6:hover {\n  transform: scale3d(2, 2, 2);\n}\n.zi7:hover {\n  transform: rotate3d(10, 10, 10, 30deg);\n}\n.zi8:hover {\n}\n.yin1 {\n  box-shadow: 10px 10px 5px #888888;\n}\n.yin2 {\n  border-radius: 20px;\n}\n.xian {\n  width: 65px;\n  height: 65px;\n  border: 3px groove rgba(200, 60, 30, 0.8);\n  text-align: center;\n  line-height: 30px;\n  font-size: 5px;\n  float: left;\n  margin-left: 3px;\n}\n.h1 {\n  background-image: linear-gradient(red, blue);\n}\n.h2 {\n  background-image: repeating-linear-gradient(\n    30deg,\n    orange 3px,\n    red 22px\n  ); /*重复渐变*/\n}\n.h3 {\n  background-image: linear-gradient(\n    60deg,\n    red 30px,\n    blue 80px,\n    green 120px,\n    orange 300px\n  ); /*百分比与像素都可以*/\n}\n.h4 {\n  background-image: radial-gradient(\n    ellipse,\n    red 3px,\n    blue 8px,\n    green 12px,\n    orange 30px\n  ); /*椭圆*/\n}\n.h5 {\n  background-image: radial-gradient(red, blue);\n}\n.h6 {\n  background-image: radial-gradient(circle at top, red, blue, orange);\n}\n.h7 {\n  background-image: repeating-radial-gradient(\n    circle,\n    orange 7px,\n    red 30px\n  ); /*重复渐变*/\n}\n.h8 {\n  background-image: radial-gradient(\n    circle closest-side,\n    red,\n    blue,\n    orange\n  ); /*重复渐变*/\n}\n.bian {\n  width: 100px;\n  height: 80px;\n  background: darkgray;\n  text-align: center;\n  line-height: 70px;\n  border: 3px groove goldenrod;\n  border-radius: 20px;\n  font-size: 5px;\n  float: left;\n  margin-left: 20px;\n  margin-bottom: 20px;\n}\n.guo {\n  animation: guo 3s ease 0s infinite;\n}\n.wei {\n  animation: wei 3s ease-in infinite;\n}\n@keyframes guo {\n  0% {\n  }\n  20% {\n    background: honeydew;\n  }\n  50% {\n    background: sandybrown;\n  }\n  70% {\n    background: goldenrod;\n  }\n  75% {\n    background: olive;\n  }\n  100% {\n    background: cadetblue;\n  }\n}\n@keyframes wei {\n  0% {\n    transform: translateX(20px) rotate(30deg);\n  }\n  20% {\n    transform: translateY(-30px) scale(0.8);\n  }\n  50% {\n    background: saddlebrown;\n    transform: translate(10px);\n  }\n  75% {\n    transform: rotate(-30deg);\n  }\n  100% {\n    transform: translate3d(10px, 10px, 10px);\n  }\n}\n.hav {\n  font-size: 10px;\n}\n.hav1:hover .hav {\n  font-size: 15px;\n}\n.yin {\n  display: none;\n}\n.hav2:hover .yin {\n  display: block;\n}\n#yang {\n  width: 200px;\n  height: 80px;\n  background: bisque;\n  border: 4px groove sandybrown;\n  border-radius: 20px;\n  margin-left: 40px;\n  margin-top: 20px;\n  text-align: center;\n  line-height: 80px;\n}\n</style>\n\n"]}]}